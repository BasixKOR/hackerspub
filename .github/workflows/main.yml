name: main
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno task test
    - run: deno task check
          
  build:
    needs: [test]
    permissions:
      contents: read
      packages: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3 
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - uses: docker/login-action@v3
      with:
        registry: registry.fly.io
        username: x
        password: ${{ secrets.FLY_API_TOKEN }}
    - uses: docker/build-push-action@v6
      with:
        push: true
        platforms: linux/amd64
        build-args:
          GIT_COMMIT=${{ github.sha }}
        tags: |
          ghcr.io/${{ github.repository }}:git-${{ github.sha }}
          ghcr.io/${{ github.repository }}:latest
          registry.fly.io/hackerspub:git-${{ github.sha }}
          registry.fly.io/hackerspub:latest
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
        annotations: |
          org.opencontainers.image.title=Hackers' Pub
          org.opencontainers.image.description=ActivityPub-enabled social network for hackers
          org.opencontainers.image.url=https://hackers.pub/
          org.opencontainers.image.source=https://github.com/dahlia/hackerspub
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=AGPL-3.0-only
        cache-from:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache
        cache-to:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache,mode=max

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - uses: actions/checkout@v4
    - run: |
        flyctl deploy \
          --remote-only \
          --image registry.fly.io/hackerspub:git-${{ github.sha }}
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
